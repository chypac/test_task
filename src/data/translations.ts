// Утилита для "перевода" постов на русский язык для демонстрационных целей.

const russianTitles = [
  "Разработка на React: Лучшие практики",
  "Управление состоянием с помощью Redux и MobX",
  "Секреты эффективной стилизации в Tailwind CSS",
  "Оптимизация производительности в веб-приложениях",
  "Полное руководство по TypeScript для начинающих",
  "Как создать свой первый full-stack проект",
  "Асинхронные операции в JavaScript: от колбэков до async/await",
  "Тестирование React-компонентов с Jest и RTL",
  "Новые возможности в ES2023, которые стоит знать",
  "Архитектура современных фронтенд-приложений"
];

const russianBodies = [
  "В этой статье мы рассмотрим ключевые подходы к созданию масштабируемых и поддерживаемых React-приложений, включая структуру компонентов, хуки и управление состоянием.",
  "Сравнение двух популярных библиотек для управления состоянием. Узнайте, какая из них лучше подходит для вашего следующего проекта и почему.",
  "Откройте для себя продвинутые техники и утилиты Tailwind CSS, которые помогут вам создавать красивые и адаптивные интерфейсы быстрее, чем когда-либо.",
  "Изучите методы и инструменты для анализа и повышения производительности вашего сайта, от ленивой загрузки изображений до оптимизации бандла.",
  "Этот курс проведет вас через все основы TypeScript, от базовых типов до сложных генериков, и научит писать более надежный и чистый код.",
  "Пошаговая инструкция по созданию полноценного веб-приложения с использованием React для фронтенда и Node.js/Express для бэкенда.",
  "Глубокое погружение в асинхронность в JavaScript. Мы разберем все, от старых подходов до современных синтаксических конструкций, на практических примерах.",
  "Научитесь писать надежные тесты для ваших компонентов, чтобы обеспечить стабильность и предсказуемость вашего приложения на всех этапах разработки.",
  "Обзор последних нововведений в стандарте ECMAScript, которые уже сегодня можно использовать для написания более выразительного и мощного кода.",
  "Рассмотрим различные архитектурные паттерны, такие как микрофронтенды и компонентно-ориентированный подход, для создания сложных и долговечных систем."
];

/**
 * Заменяет title и body поста на русские аналоги.
 * @param post - Объект поста для перевода.
 * @returns - Пост с переведенными полями title и body.
 */
export const translatePost = <T extends { id: number; title: string; body: string }>(post: T): T => {
  // Используем ID поста, чтобы циклически выбирать данные из массивов.
  // Это гарантирует, что у одного и того же поста всегда будет один и тот же "перевод".
  const index = (post.id - 1) % russianTitles.length;
  return {
    ...post,
    title: russianTitles[index],
    body: russianBodies[index]
  };
};

const russianCommentBodies = [
  "Отличная статья, очень информативно!",
  "Спасибо, как раз искал подобное руководство.",
  "Не совсем согласен с подходом к стилизации, но в целом полезно.",
  "А как насчет использования Zustand вместо Redux?",
  "Очень жду продолжения этой серии статей!",
  "Нашел небольшую опечатку в коде, но идея понятна.",
  "Этот материал идеально подходит для новичков.",
  "Хотелось бы больше примеров из реальной практики.",
  "Автор, вы молодец! Так держать!",
  "Сохранил в закладки, обязательно перечитаю."
];

/**
 * Заменяет body комментария на русский аналог.
 * @param comment - Объект комментария для перевода.
 * @returns - Комментарий с переведенным полем body.
 */
export const translateComment = <T extends { id: number; body: string }>(comment: T): T => {
  const index = (comment.id - 1) % russianCommentBodies.length;
  return {
    ...comment,
    body: russianCommentBodies[index]
  };
};
